класс cache соединяется с базой данных, а затем любой из тредов может работать с записями таким образом:
    R = Cache.get("Some Key");
    R.setData("Data Value");
    R.release();

явный R.release() как я понимаю необходим, иначе будет дедлок. Вешать такую функцию на RAII или unwind-protect я бы не осмелился.

"Сохранение изменений в базу данных с заданной периодичностью" можно совершить с помощью треда-таймера, спящего определенный интервал, а затем вызывающего cache::flush(). В самом кэше этой фиче не место.

"Если поток запросил запись, которая занята другим потоком, то он должен ждать записи некоторое время, по истечению которого выкинуть исключение." -- какое исключение и куда?


Для простоты использовал LRU кэширование, фреймвок Qt и не эскейпил специальные символы в SQL запросах, посему запросы дают потенциальные сплоиты. Qt имеет собственный MySQL драйвер, но мне было интересней попробовать самый примитивый C API.